// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package models

// SystemCollection represents generic items collection
type SystemCollection []*System

// Filter returns items which meet the given condition
func (collection SystemCollection) Filter(condition SystemCollectionFilter) SystemCollection {
	filteredCollection := SystemCollection{}
	for _, item := range collection {
		if condition(item) {
			filteredCollection = append(filteredCollection, item)
		}
	}
	return filteredCollection
}

// SystemCollectionFilter is a condition function for filtering items
type SystemCollectionFilter func(*System) bool

// UserCollection represents generic items collection
type UserCollection []*User

// Filter returns items which meet the given condition
func (collection UserCollection) Filter(condition UserCollectionFilter) UserCollection {
	filteredCollection := UserCollection{}
	for _, item := range collection {
		if condition(item) {
			filteredCollection = append(filteredCollection, item)
		}
	}
	return filteredCollection
}

// UserCollectionFilter is a condition function for filtering items
type UserCollectionFilter func(*User) bool

// ReservationCollection represents generic items collection
type ReservationCollection []*Reservation

// Filter returns items which meet the given condition
func (collection ReservationCollection) Filter(condition ReservationCollectionFilter) ReservationCollection {
	filteredCollection := ReservationCollection{}
	for _, item := range collection {
		if condition(item) {
			filteredCollection = append(filteredCollection, item)
		}
	}
	return filteredCollection
}

// ReservationCollectionFilter is a condition function for filtering items
type ReservationCollectionFilter func(*Reservation) bool
